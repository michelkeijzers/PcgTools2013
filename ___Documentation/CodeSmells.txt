Version Control
- Use GIT


Generic
- Split program up in more modules:
  - DATA:
    - Models classes
    - (Meta) / Patch classes
  - FUNC:
    - Functionality
    - ModelViews
    - Tools
    - Logo
  - GUI
    - Screens
    - Resources (?)
    - Pictures/Links
- Decrease sizes
  - Files   <= 100 lines
  - Methods <= 40(?) lines
  - Classes <= 7 fields
  - Classes <= 7 methods
  - Methods <= 5 parameters
  - Methods <= 5 complexity

- Clearity
  - Use names parameters for booleans
  - Remove empty comments
  - Remove dead code (pre: GIT)

Maintainability/Testability
  - Use interfaces for parameters

Design
  - Remove class inheritance
  - Use strategy pattern to make differences (especially Program/GmProgram
  - Different parameter solutions

SOLID:
- Single Responsibility Principle
  - Fixes:
    - Too large files
    - Too large functions
  - Use for:
    - Most files > 100 lines
- Open/Closed Principle
  - Check if / switch statements
  - Check for more interface possibilities
- Liskov Substitution Principle
  - 
- Interface Segregation Principle
  - Check interfaces (split if needed)
- Dependency Inversion Principle
  - 
